{"ast":null,"code":"var _jsxFileName = \"/Users/bekir/Documents/GitHub/Full-Stack-Project-Assessment/client/src/Video.jsx\";\n// import React, { useState } from 'react';\n// function Video({ video, onRemove }) {\n//   const [votes, setVotes] = useState(video.rating);\n//   const handleVote = () => {\n//     setVotes(prevVotes => prevVotes + 1);\n//   };\n//   return (\n//     <div className=\"video\">\n//       <h2>{video.title}</h2>\n//       <iframe width=\"560\" height=\"315\" src={video.url} frameBorder=\"0\" allowFullScreen></iframe>\n//       <p>Votes: {votes}</p>\n//       <button onClick={handleVote}>Vote</button>\n//       <button onClick={() => onRemove(video.id)}>Remove</button>\n//     </div>\n//   );\n// }\n// export default Video;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Video(_ref) {\n  let {\n    video,\n    onRemove\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-embed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", video.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => onRemove(video.id),\n      children: \"Remove Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/bekir/Documents/GitHub/Full-Stack-Project-Assessment/client/src/Video.jsx"],"names":["React","Video","video","onRemove","title","rating","id"],"mappings":";AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,OAAoC;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AAClC,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAA,gBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAA,6BAAYF,KAAK,CAACG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAACD,KAAK,CAACI,EAAP,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;KApBQL,K;AAsBT,eAAeA,KAAf","sourcesContent":["// import React, { useState } from 'react';\n\n// function Video({ video, onRemove }) {\n//   const [votes, setVotes] = useState(video.rating);\n\n//   const handleVote = () => {\n//     setVotes(prevVotes => prevVotes + 1);\n//   };\n\n//   return (\n//     <div className=\"video\">\n//       <h2>{video.title}</h2>\n//       <iframe width=\"560\" height=\"315\" src={video.url} frameBorder=\"0\" allowFullScreen></iframe>\n//       <p>Votes: {votes}</p>\n//       <button onClick={handleVote}>Vote</button>\n//       <button onClick={() => onRemove(video.id)}>Remove</button>\n//     </div>\n//   );\n// }\n\n// export default Video;\n\nimport React from 'react';\n\nfunction Video({ video, onRemove }) {\n  return (\n    <div className=\"Video-container\">\n      <h2>{video.title}</h2>\n      <div className=\"video-embed\">\n      {/* <iframe\n  width=\"100%\"\n  height=\"315\"\n  src={`https://www.youtube.com/embed/${video.url.split('v=')[1]}`}\n  title={video.title}\n  allowFullScreen\n/> */}\n\n      </div>\n      <p>Rating: {video.rating}</p>\n      <button className=\"btn\" onClick={() => onRemove(video.id)}>\n        Remove Video\n      </button>\n    </div>\n  );\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}